{"ast":null,"code":"var _jsxFileName = \"/home/helias/typescript/todo_type/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, SetTask] = useState(\"\");\n  const [number1, SetNumber] = useState(0);\n  const [task2, SetTask2] = useState(\"\");\n  const [task3, SetTask3] = useState(\"\");\n  const [task4, SetTask4] = useState([]); //vai ser uma lista\n\n  const handleChange = event => {\n    if (event.target.name === \"task\") {\n      SetTask(event.target.value);\n    } else {\n      SetNumber(Number(event.target.value));\n    }\n  };\n\n  const AddTask = () => {\n    const newTask = {\n      taskName: task,\n      numero: number1,\n      taskName2: task2,\n      taskName3: task3\n    };\n    SetTask4([...task4, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"texto aqui\",\n          name: \"task\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"numero aqui\",\n          name: \"numero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"texto aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"texto aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"texto aqui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AddTask,\n        className: \"botao\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KkBr8Zh5K7fn2ior1/VrubjDkwc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/helias/typescript/todo_type/src/App.tsx"],"names":["React","useState","App","task","SetTask","number1","SetNumber","task2","SetTask2","task3","SetTask3","task4","SetTask4","handleChange","event","target","name","value","Number","AddTask","newTask","taskName","numero","taskName2","taskName3"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAA+C,OAA/C,C,CACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAS,CAAT,CAArC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAU,EAAV,CAAlC,CANoB,CAM4B;;AAEhD,QAAMY,YAAY,GAAIC,KAAD,IAAgD;AACnE,QAAGA,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,MAAzB,EAAgC;AAC9BZ,MAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAP;AACD,KAFD,MAEK;AACHX,MAAAA,SAAS,CAACY,MAAM,CAACJ,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAP,CAAT;AACD;AACF,GAND;;AAQA,QAAME,OAAO,GAAG,MAAW;AACzB,UAAMC,OAAO,GAAG;AAACC,MAAAA,QAAQ,EAAElB,IAAX;AAAiBmB,MAAAA,MAAM,EAAEjB,OAAzB;AAAkCkB,MAAAA,SAAS,EAAEhB,KAA7C;AAAoDiB,MAAAA,SAAS,EAAEf;AAA/D,KAAhB;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUS,OAAV,CAAD,CAAR;AAGD,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,YAA/B;AAA4C,UAAA,IAAI,EAAC,MAAjD;AAAwD,UAAA,QAAQ,EAAEP;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,WAAW,EAAC,aAAjC;AAA+C,UAAA,IAAI,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,OAAO,EAAEM,OAAjB;AAA0B,QAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvCD;;GAAMjB,G;;KAAAA,G;AAyCN,eAAeA,GAAf","sourcesContent":["import React, {FC, ChangeEvent, useState} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Itask} from \"./interfaces\"\nconst App: FC = () => {\n\n  const [task, SetTask] = useState<String>(\"\")\n  const [number1, SetNumber] = useState<number>(0)\n  const [task2, SetTask2] = useState<String>(\"\")\n  const [task3, SetTask3] = useState<String>(\"\")\n  const [task4, SetTask4] = useState<Itask[]>([]) //vai ser uma lista\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement> ):void => {\n    if(event.target.name === \"task\"){\n      SetTask(event.target.value)\n    }else{\n      SetNumber(Number(event.target.value))\n    }\n  }\n  \n  const AddTask = ():void => {\n    const newTask = {taskName: task, numero: number1, taskName2: task2, taskName3: task3}\n    SetTask4([...task4,newTask])\n\n\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <div className=\"inputContainer\">\n          <input type=\"text\" placeholder=\"texto aqui\" name=\"task\" onChange={handleChange}></input>\n          <input type=\"number\" placeholder=\"numero aqui\" name=\"numero\"></input>\n          <input type=\"text\" placeholder=\"texto aqui\"></input>\n          <input type=\"text\" placeholder=\"texto aqui\"></input>\n          <input type=\"text\" placeholder=\"texto aqui\"></input>\n        </div>\n        <button onClick={AddTask} className=\"botao\">Add Task</button>\n      </div>\n      <div className=\"todoList\"></div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}